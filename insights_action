First glance thoughts:
x looks like a regression problem
x looks cleaned; although the test data has a point missing - maybe more missing data?

Aims:
- check full code and follow matrices, especially dummy encoding check
- convert all code to Jupyter for submission - or attach them/ save plots
- write about methods in 1 page
x do visualizations
x read scikit-learn book and see if anything new can be done?
x plot learning curves
x check for any outliers in any column?
x check patterns/ correlations between different columns and targets; and between columns
x try KNNregressor after PCA - since the points may mean dots on the fish skin
x try a NN approach to this as well due to a lot of dimensionality - only after EDA & other simple models
x don't touch the test data; do all work on the training data alone - split into train and val.
x two models required: random forest regressors? SVM regressors? - google for different types of regressors?
x PCA? - looks like there are many dimensions
x do everything with pandas dataframe - easier for merging with ML models
x while testing, we must standardize the test according to the training set
x use pipeline from sklearn for the initial preprocessing - not needed here
x this regression test is similar to the Kaggle challenge in that it is scored on RMSE.
x shuffle the data before preprocessing
xx compare with what you had done for Asana test and use that too - different model and workflow, so not doing
xx try kmeans to get data insights? - not doing as this won't give out any information since the data is dummy data
